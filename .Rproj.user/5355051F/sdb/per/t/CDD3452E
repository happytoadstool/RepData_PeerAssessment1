{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n\n## Loading and preprocessing the data\n\n```{r, echo=TRUE}\nactivity <- read.csv(unz(\"activity.zip\",\"activity.csv\"), stringsAsFactors = FALSE, colClasses = c(\"integer\",\"Date\",\"integer\"))\n\n\n```\n\n## What is mean total number of steps taken per day?\n```{r, echo=TRUE, message=FALSE}\nlibrary(dplyr)\nlibrary(ggplot2)\nstepsperday <- activity %>% group_by(date) %>% summarise(sum=sum(steps,na.rm=TRUE))\nmeansteps <- mean(stepsperday$sum, na.rm=TRUE) %>% round(0)\nmediansteps <- median(stepsperday$sum, na.rm=TRUE)\n\n# plot histogram of steps per day\nggplot(stepsperday, aes(x=date, y=sum)) + \n    geom_bar(stat=\"identity\") +\n    labs(x=\"Date\", y=\"Total steps per day\",title=\"Steps taken per day\") +\n    theme_bw()\n\n\n\n```\n\nMean number of steps per day was : `r meansteps`\n\nMedian steps per day was : `r mediansteps`\n\n\n## What is the average daily activity pattern?\n``` {r, echo=TRUE}\nfiveminute <- activity %>% group_by(interval) %>% summarise(intervalmean = mean(steps, na.rm=TRUE))\nmaxinterval <- fiveminute %>% filter(intervalmean == max(intervalmean))\n\nggplot(fiveminute, aes(x=interval, y=intervalmean)) +\n    geom_line() +\n    labs(x=\"5 minute interval during day\", y=\"Mean steps per interval\", title=\"Steps per 5-minute interval period\") +\n    theme_bw()\n\n```\n\nInterval with most number of steps was : `r maxinterval$interval` with `r round(maxinterval$intervalmean,2)` steps \n\n\n## Imputing missing values\n``` {r, echo=TRUE}\n# use mean of interval for missing values\nmissingrows <- sum(!complete.cases(activity))\n\nimputedactivity <- activity %>% group_by(interval) %>% mutate(steps = ifelse(is.na(steps),mean(steps, na.rm=TRUE),steps))\nnewstepsperday <- imputedactivity %>% group_by(date) %>% summarise(sum=sum(steps,na.rm=TRUE))\nnewmeansteps <- mean(newstepsperday$sum) %>% round(0)\nnewmediansteps <- median(newstepsperday$sum) %>% round(0)\n\n\n```\nThe number of rows with missing steps counts is: `r missingrows` out of a total of `r nrow(activity)` rows of data.\n\nThe missing data on the number of steps was filled in using the mean steps for that interval across the date range.\n\n```{r, echo=TRUE}\n# plot histogram of steps per day\nggplot(newstepsperday, aes(x=date, y=sum)) + \n    geom_bar(stat=\"identity\") +\n    labs(x=\"Date\", y=\"Total steps per day\",title=\"Steps taken per day with missing data filled with mean of interval\") +\n    theme_bw()\n\n```\nMean number of steps per day with missing values replaced was : `r newmeansteps` which is greater than the original data of `r meansteps`\n\nMedian steps per day with missing values replaced was : `r newmediansteps` which again is greater than the original data of `r mediansteps`\n\nIt makes sense that there is an increase in the daily mean and median steps, as we added steps to replace missing values, so the total number of steps per day would increase.\n\n\n## Are there differences in activity patterns between weekdays and weekends?\n```{r, echo=TRUE}\nweekend <- c(\"Saturday\", \"Sunday\")\nimputedactivity <- imputedactivity %>% mutate(daytype = as.factor(ifelse(weekdays(date) %in% weekend,\"weekend\",\"weekday\")))\nplotdata <- imputedactivity %>% group_by(daytype,interval) %>% summarise(stepcount = mean(steps))\n\nggplot(plotdata, aes(x=interval,y=stepcount)) +\n    geom_line(colour=\"blue\") +\n    facet_grid(daytype ~ .) + \n    labs(x=\"Interval\", y=\"Number of steps\") +\n    theme_bw()\n\n```\n",
    "created" : 1444732110519.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3230744350",
    "id" : "CDD3452E",
    "lastKnownWriteTime" : 1444740328,
    "path" : "C:/Work/RProjects/coursera/ReproducibleResearch/Project1/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}